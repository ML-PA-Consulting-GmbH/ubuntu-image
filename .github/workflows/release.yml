name: Create Release Artifact

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.22'

    - name: Extract versions from tag
      id: extract_versions
      run: |
        TAG_NAME=${GITHUB_REF##*/}
        UBUNTU_IMAGE_VERSION=$TAG_NAME
        echo "UBUNTU_IMAGE_VERSION=$UBUNTU_IMAGE_VERSION" >> $GITHUB_ENV

    # - name: Download snapd tarball
    #   run: |
    #     SNAPD_URL=https://github.com/ML-PA-Consulting-GmbH/snapd/releases/download/v${{ env.SNAPD_VERSION }}/snapd_v${{ env.SNAPD_VERSION }}.tar
    #     curl -L $SNAPD_URL -o /tmp/snapd_v${{ env.SNAPD_VERSION }}.tar

    # - name: Untar snapd
    #   run: |
    #     mkdir -p /tmp/snapd
    #     tar -xf /tmp/snapd_v${{ env.SNAPD_VERSION }}.tar -C /tmp/snapd
    #     ls -la /tmp/snapd

    - name: Pull dependencies and update go.mod
      run: |
        # go mod edit -replace github.com/snapcore/snapd=/tmp/snapd
        go mod tidy
        go mod vendor

    - name: Create tarball
      run: |
        tar cfah /tmp/ubuntu-image_${{ env.UBUNTU_IMAGE_VERSION }}.tar .

    - name: Upload release asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release create ${{ env.UBUNTU_IMAGE_VERSION }}
          --title "Release ${{ env.UBUNTU_IMAGE_VERSION }}"
          ${{ steps.version.outputs.RELEASE_TYPE }} --generate-notes
          /tmp/ubuntu-image_${{ env.UBUNTU_IMAGE_VERSION }}.tar
